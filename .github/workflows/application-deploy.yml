name: Application Deployment


on:
  push:
    # paths:
      # - "applications/**"
    branches:
      - dev
      - staging
      - main
env:
  ECR_REPOSITORY: ${{ github.ref_name }}-spring-repo
  EKS_CLUSTER_NAME: ${{ github.ref_name }}-spring-cluster 
  AWS_REGION: us-east-1
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:


      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f applications/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 6: Deploy to EKS (Optional for now)
      # - name: Update kube config
      #   run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      # - name: Deploy to EKS
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
      #     IMAGE_TAG: ${{ steps.commit.outputs.short }}
      #   run: |
      #     sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
      #     kubectl apply -f manifests/hello-app-deployment.yaml
      #     kubectl apply -f manifests/hello-app-service.yaml