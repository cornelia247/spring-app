name: Infrastructure Deployment

on:
  push:
    branches:
      - main
      - staging
      - dev

env:
  AWS_REGION: us-east-1  

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Set Terraform Variables
        id: set-vars
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "TF_VAR_FILE=./infrastructure/prod.tfvars" >> $GITHUB_ENV
          else
            echo "TF_VAR_FILE=./infrastructure/${{ github.ref_name }}.tfvars" >> $GITHUB_ENV
          fi

  plan:
    name: Terraform Plan
    needs: setup
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
       working-directory: ./infrastructure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          
      - name: Set Terraform Variables
        id: set-vars
        run: |
            if [[ "${{ github.ref_name }}" == "main" ]]; then
              echo "TF_VAR_FILE=prod.tfvars" >> $GITHUB_ENV
            else
              echo "TF_VAR_FILE=${{ github.ref_name }}.tfvars" >> $GITHUB_ENV
            fi

      - name: Terraform Init
        run:
          echo running terraform init 
          terraform init

      - name: Terraform Plan
          echo running terraform plan with ${{ github.ref_name }}.tfvars
        run: terraform plan -var-file=${{ github.ref_name }}.tfvars 

  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    if: ${{ github.ref_name != 'main' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Apply the Plan
        run: terraform apply tfplan

  prod-apply:
    name: Terraform Apply for Production
    needs: plan
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}

    environment:
      name: production
      url: https://console.aws.amazon.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply (Requires Approval)
        run: terraform apply tfplan